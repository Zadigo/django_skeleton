from functools import cached_property
from typing import Type

from django_skeleton.apps import apps
from django_skeleton.db.models.fields import Field
from django_skeleton.db.models.managers import BaseManager
from django_skeleton.db.models.models import Model


class Options:
    default_apps: apps = ...
    pk: bool = ...
    apps: apps = ...
    app_label: str = ...
    meta: Type = ...
    private_fields: list = ...
    local_many_to_many: list = ...
    local_fields: list = ...
    model: Model = ...
    model_name: str = ...
    local_managers: list = ...
    managers: list = ...

    def __init__(self, meta: Options, app_label: str = ...) -> None: ...
    def __repr__(self) -> str: ...
    @cached_property
    def managers_map(self) -> dict: ...
    def _prepare(self, cls: Type) -> None: ...
    def contribute_to_class(self, cls: Model, name: str) -> None: ...
    def add_field(self, field: Field, private: bool = False) -> None: ...
    def add_manager(self, manager: BaseManager) -> None: ...
    def set_primary_key(self, field: Field) -> None: ...
