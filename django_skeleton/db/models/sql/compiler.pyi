from typing import List, Tuple, Type

from django_skeleton.db.models.expressions import Col
from django_skeleton.db.models.sql.query import Query
from django_skeleton.db.utils import BaseConnectionHandler

class SQLCompiler:
    query: Type = ...
    connection: Type = ...
    using: str = ...
    select = ...
    annotation_col_map = ...
    klass_info = ...

    def __init__(
        self,
        query: Query,
        connection: BaseConnectionHandler,
        using: str
    ) -> None: ...
    def setup_query(self) -> None: ...
    def get_order_by(self) -> None: ...
    def get_select(self) -> Tuple[List[Col], dict, dict]: ...
    def get_extra_select(self, order_by, select) -> None: ...
    def get_group_by(self, select, order_by) -> List[tuple, tuple]: ...
    def pre_sql_setup(self) -> tuple: ...

    def as_sql(
        self,
        with_limits: bool = ...,
        with_col_aliases: bool = ...
    ) -> str: ...
